<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>yeni blog</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2023-10-22T00:51:13+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Welcome to Jekyll!</title>
   <link href="http://localhost:4000/2023/10/22/welcome-to-jekyll"/>
   <updated>2023-10-22T00:50:34+09:00</updated>
   <id>http://localhost:4000/2023/10/22/welcome-to-jekyll</id>
   <content type="html">&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code&gt;MONTH&lt;/code&gt; and &lt;code&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;def print_hi(name)
  puts &amp;quot;Hi, #{name}&amp;quot;
end
print_hi(&amp;#39;Tom&amp;#39;)
#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>(WWDC23) Debug with structured logging</title>
   <link href="http://localhost:4000/2023/10/17/wwdc23-debug-with-structed-logging"/>
   <updated>2023-10-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/10/17/WWDC23-debug-with-structed-logging</id>
   <content type="html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt; 1. 디버그 콘솔 알아보기 (Tour Debug Console)&lt;br /&gt;
 2. 디버깅 예시 (Live debugging)&lt;br /&gt;
 3. LLDB 개선 사항 (LLDB improvements)&lt;br /&gt;
 4. 로깅 팁 (Tips for logging)&lt;/p&gt;

&lt;h2 id=&quot;1-디버그-콘솔-알아보기-tour-debug-console&quot;&gt;1. 디버그 콘솔 알아보기 (Tour Debug Console)&lt;/h2&gt;
&lt;p&gt; - Type, Library, Subsystem, Category 선택해서 추가 정보 얻을 수 있음&lt;br /&gt;
 - 로그의 Type, TimeStamp, Library, Subsystem, Category, Call   site정보 보여주고&lt;br /&gt;
 - 보고싶은 데이터만 필터로 지정해서 볼 수 있음&lt;br /&gt;
 - popup으로 이용가능한 metadata 보여줌&lt;/p&gt;

&lt;h2 id=&quot;2-디버깅-예시-live-debugging&quot;&gt;2. 디버깅 예시 (Live debugging)&lt;/h2&gt;

&lt;h2 id=&quot;3-lldb-개선-사항-lldb-improvements&quot;&gt;3. LLDB 개선 사항 (LLDB improvements)&lt;/h2&gt;

&lt;h2 id=&quot;4-로깅-팁-tips-for-logging&quot;&gt;4. 로깅 팁 (Tips for logging)&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>(WWDC23) Embed the Photos Picker in your app</title>
   <link href="http://localhost:4000/2023/10/03/wwdc23-embed-the-photos-picker-in-your-app"/>
   <updated>2023-10-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/2023/10/03/WWDC23-Embed-the-Photos-Picker-in-your-app</id>
   <content type="html">&lt;h3 id=&quot;intro&quot;&gt;Intro&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;iOS 14에서 재디자인된 Picker UI 신기능: search, zoomable grid&lt;/li&gt;
  &lt;li&gt;해당 세션에서는 앱에 시스템 피커를 임베드할 수 있는 API들에 대해 소개할 것
    &lt;ol&gt;
      &lt;li&gt;Embedded picker&lt;/li&gt;
      &lt;li&gt;Options menu&lt;/li&gt;
      &lt;li&gt;HDR and Cinematic&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;embedded-picker&quot;&gt;Embedded picker&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;앱에서 실행되는 것 같지만, 다른 프로세스에서 실행됨. 앱의 top 에서 렌더링된것
    &lt;ul&gt;
      &lt;li&gt;picker에 직접적으로 접근할 수 없음.&lt;/li&gt;
      &lt;li&gt;Picker 내용도 스크린샷 할 수 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;options-menu&quot;&gt;Options menu&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;picker style&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.presentation&lt;/code&gt;: 기본&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.inline&lt;/code&gt;: accessories가 사라진&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;.compact&lt;/code&gt;: 하단의 scrollable picker&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hdr-and-cinematic&quot;&gt;HDR and Cinematic&lt;/h3&gt;

</content>
 </entry>
 

</feed>
