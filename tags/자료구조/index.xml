<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>자료구조 on @yeniful blog</title><link>http://yeniful.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link><description>Recent content in 자료구조 on @yeniful blog</description><generator>Hugo -- 0.147.8</generator><language>en-us</language><lastBuildDate>Sat, 14 Jun 2025 21:33:55 +0900</lastBuildDate><atom:link href="http://yeniful.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>[Java] Java의 Collection Framework (컬렉션 프레임워크)를 알아보자!</title><link>http://yeniful.github.io/posts/20250614/</link><pubDate>Sat, 14 Jun 2025 21:33:55 +0900</pubDate><guid>http://yeniful.github.io/posts/20250614/</guid><description>&lt;p>최근 C++과 Java 두 언어를 살펴보면서 자료구조 라이브러리(각각 STL과 컬렉션 프레임워크)에서 느껴지는 차이점이 흥미로웠습니다. 🤩
언어별로 용어가 다르거나 인터페이스가 달라 헷갈리는 경우도 있었고, 알게된 것들을 더 잘 기억하기 위해 Java의 컬렉션(Collection) 프레임워크에 대해 간단하게 정리해보겠습니다 :)&lt;/p>
&lt;h2 id="collection이란">Collection이란?&lt;/h2>
&lt;p>Java에서 &lt;strong>컬렉션(Collection)&lt;/strong> 은 데이터(객체)를 담고 관리하는 그릇, 즉 컨테이너(container) 역할을 하는 패키지입니다.
자바의 컨테이너는 크게 &lt;code>List&lt;/code> 계열, &lt;code>Set&lt;/code> 계열, &lt;code>Map&lt;/code> 계열 3가지로 구분할 수 있어요.&lt;/p>
&lt;p>주의해야할 점은, &lt;code>List&lt;/code> 와 &lt;code>Set&lt;/code> 은 Collection의 하위 인터페이스지만 &lt;code>Map&lt;/code> 은 둘과 구분되는 인터페이스라는 것입니다.
&lt;code>Map&lt;/code> 은 Collection이 아니지만, Collection과 마찬가지로 데이터를 담는 역할을 하는 친구이기 때문에 함께 정리할게요.&lt;/p></description></item></channel></rss>